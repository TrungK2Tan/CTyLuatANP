const cloudinary = require("cloudinary").v2;
const { CloudinaryStorage } = require("multer-storage-cloudinary");
const multer = require("multer");
require("dotenv").config();

// üî• C·∫•u h√¨nh Cloudinary
cloudinary.config({
  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
  api_key: process.env.CLOUDINARY_API_KEY,
  api_secret: process.env.CLOUDINARY_API_SECRET,
});

// üìå C·∫•u h√¨nh Multer cho ·∫£nh -> L∆∞u tr√™n Cloudinary
const storageCloudinary = new CloudinaryStorage({
  cloudinary: cloudinary,
  params: async (req, file) => ({
    folder: "images",
    format: file.mimetype.split("/")[1],
    public_id: Date.now() + "-" + file.originalname,
    resource_type: "image",
  }),
});

// üìå C·∫•u h√¨nh Multer cho t√†i li·ªáu -> L∆∞u tr√™n Cloudinary
const storageCloudinaryFile = new CloudinaryStorage({
  cloudinary: cloudinary,
  params: async (req, file) => ({
    folder: "documents",
    format: file.originalname.split(".").pop(),
    public_id: Date.now() + "-" + file.originalname,
    resource_type: "auto", // ‚ö° ƒê·ªÉ Cloudinary t·ª± nh·∫≠n di·ªán file
  }),
});

// üî• Kh·ªüi t·∫°o Multer v·ªõi c·∫•u h√¨nh Cloudinary
const uploadImage = multer({ storage: storageCloudinary });
const uploadFile = multer({ storage: storageCloudinaryFile });
// ‚úÖ C·∫•u h√¨nh Multer l∆∞u file t·∫°m v√†o th∆∞ m·ª•c "uploads/"
const upload = multer({ dest: "uploads/" });
// ‚úÖ Xu·∫•t c√°c module
module.exports = { upload, uploadImage, uploadFile, cloudinary };
